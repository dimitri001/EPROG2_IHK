/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SaveRestore_FileChooser.java
 * This class shows to the user a fileChooser,this filechooser can be used to
 * save and open data, BikeDataListBean is used to obtain to keep this data
 * Created on 21-may-2009, 21:00:10
 */

package bikeproject.model;

import java.awt.Container;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author user
 */
public class SaveRestore_FileChooser extends javax.swing.JFrame {


    JFileChooser myFileChooser = new JFileChooser();
    boolean bool_save =false;
    boolean bool_open =false;
    int choice;//keeps the return value of myFileChooser.showOpenDialog
    File myFile;
    BikeDataListBean bikeDataListBean;

    /** Creates new form SaveRestore_FileChooser */
    public SaveRestore_FileChooser(File myFile,  BikeDataListBean bikeDataListBean) {

       this.bikeDataListBean = bikeDataListBean;
       this.myFile = myFile ;
       // Here we add a listener and an action to be fired.
       myFileChooser.addActionListener(
               new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        Container c=getContentPane(); //obtains the object Container of theFrame
		c.add(myFileChooser);//adds myFilechooser to the Container
        pack();
        
        //initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 347, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/* This function is called from the controller_BP */
   public void FileChooser_Save(){
   // FileChooser.showSaveDialog( cont)cont is the container of the frame

      //choice = myFileChooser.showSaveDialog( this.getContentPane() );
      choice = myFileChooser.showDialog( this.getContentPane(),"Save" );
      bool_save = true;
      bool_open =false;

   }
/* This function is called from the controller_BP */
    public void FileChooser_Open(){
    /* Pops a custom file chooser dialog with a custom approve button.
               */
    choice = myFileChooser.showDialog(this.getContentPane(), "Open");

        
       //choice = myFileChooser.showOpenDialog( this.getContentPane() );
       /*returns the state of one od this 3 states
        # JFileChooser.CANCEL_OPTION
        # JFileChooser.APPROVE_OPTION
        # JFileCHooser.ERROR_OPTION
        */
       bool_save = false;
       bool_open = true;

   }

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

     if (choice == JFileChooser.APPROVE_OPTION )
      {
        /*Here we keep the filename typed or the name of the
         file selected by the user  */
        myFile= myFileChooser.getSelectedFile();
      if (choice == JFileChooser.APPROVE_OPTION )
         {

         if ( bool_save == true )
          {
                   
                        WriteFile();
                                        
          }else
            if ( bool_open == true)
            {
                    try {
                        ReadFile();
                    } catch (IOException ex) {
                        Logger.getLogger(SaveRestore_FileChooser.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }


        }


                    //


        }

    }

   private void WriteFile(){
       int n_elements;// herewe keep the number of elements of the bikeDataList
       BikeData b_Data;
       String bikeDataString = "";//here we keep the pulse+speed+gear

       PrintWriter writer = null;//We use this to write into myFile

       try {
          // Here we able myFile to be written
         /*PrintWriter*/ writer = new PrintWriter(this.myFile);
       } catch (FileNotFoundException ex) {
           Logger.getLogger(SaveRestore_FileChooser.class.getName()).log(Level.SEVERE, null, ex);
           }

       n_elements = bikeDataListBean.bikeDataList.size();


       for(int i =0; i< n_elements; i++)
        {
          b_Data =bikeDataListBean.bikeDataList.get(i) ;//gets the BikeData in the position i
          //Keep the Pulse,Speed and Gear in the bikeDataString
          bikeDataString = ""+b_Data.getPulse();
          bikeDataString += ";"+b_Data.getSpeed();
          bikeDataString += ";"+b_Data.getGear();
          writer.println(bikeDataString);//writes in one line the string bikeDataString
        }
       writer.close();

    }


     private void ReadFile() throws IOException {
      String[] lineRead;
      String aux;//auxiliary var
      String delimiter = ";";

        /*
        First whit myFile we create a FileReader
        and the we create a BufferedReader, to read myFile.        
        */
        BufferedReader reader = new BufferedReader(new FileReader(this.myFile));

        aux=  reader.readLine();
        lineRead= aux.split(delimiter);
        
         while (lineRead != null)
         {//Obtains every field of BikeData
           int pulse = Integer.parseInt(lineRead[0]);
           int speed = Integer.parseInt(lineRead[1]);
           int gear = Integer.parseInt(lineRead[2]);
           //Create a new BikeData,add this one to the bikeDataListBean
           //this activates the firePropertyChange
           bikeDataListBean.addBikeData(new BikeData(pulse,speed,gear));
            try {
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(SaveRestore_FileChooser.class.getName()).log(Level.SEVERE, null, ex);
            }

           aux=  reader.readLine();
           if (aux == null )
           {
               lineRead = null;
           } else{
                lineRead= aux.split(delimiter);
                 }

         }

        reader.close();
              System.out.println( "SaveRestore_FileChooser reader is closed" );

       int n_elements = bikeDataListBean.bikeDataList.size();

       System.out.println( "" );
       System.out.println( "Contenido del BikeDataListBean leido" );
       for(int i =0; i< n_elements; i++)
        {
         BikeData b_Data =bikeDataListBean.bikeDataList.get(i) ;//gets the BikeData in the position i
          //Keep the Pulse,Speed and Gear in the bikeDataString
        System.out.print( "Contenido del BikeDataListBean Pulso recibido = " + b_Data.getPulse()+ " ");
        System.out.println( "Contenido del BikeDataListBean Speed recibida = " + b_Data.getSpeed()+ " ");
        System.out.println( "Contenido del BikeDataListBean counter_sec = " + i);


        }


     }


    /**
    * @param args the command line arguments
    */
    /*
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaveRestore_FileChooser().setVisible(true);
            }
        });
    }
//*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
}
